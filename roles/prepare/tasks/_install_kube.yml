# Contract: Install kubeadm, kubelet, kubectl and tc on all nodes. The packages MUST NOT be upgraded or
# modified in any way if there is an existing installation. (Hint: use current_kubelet_version == '')
# in addition, The following should be installed on all control plane nodes: (Hint: use is_control_plane)
# python3, openssl and the kubernetes.core dependencies: PyYAML, jsonpatch and kubernetes (PyPi)

- name: YUM info kubelet
  yum: list=kubelet
  register: yum_kubelet_out
  become: true

- vars:
    _kubelet_info: "{{ yum_kubelet_out.results | selectattr('yumstate', 'eq', 'installed') }}"
  set_fact:
    current_kubelet_version: "{{ _kubelet_info[0].version if (_kubelet_info | length > 0) else '' }}"

- assert:
    that: current_kubelet_version == kubernetes_version or current_kubelet_version == ''
    quiet: true
    fail_msg: >-
      A different version of the kubelet is installed {{ current_kubelet_version }}.
      Kubernetes version {{ kubernetes_version }}.
      You can set prepare_upgrade to upgrade/downgrade to {{ kubernetes_version }}.
      Such action is dangerous and should only by used when initializing a new cluster.
  when: not prepare_upgrade


- name: Ensure Kubernetes repository
  yum_repository:
    name: kubernetes
    description: kubernetes
    baseurl: 'https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch'
    gpgcheck: true
    gpgkey: 'https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg'
    exclude: kubelet kubeadm kubectl
    enabled: true
  when: not no_yum_repo

  become: true

- name: Enusre 'tc' command is presnet
  yum: name=iproute-tc state=present
  become: true

- name: Ensure kubeadm, kubelet and kubectl packages are present
  yum:
    name:
      - kubelet-{{ kubernetes_version }}-0
      - kubeadm-{{ kubernetes_version }}-0
      - kubectl-{{ kubernetes_version }}-0

    allow_downgrade: "{{ prepare_upgrade }}"
    state: present
    disable_excludes: kubernetes

  become: true
  when: current_kubelet_version == '' or prepare_upgrade

- name: Ensure control_plane dependencies
  yum:
    name:
      - git
      - python36
      - python3-pyyaml
      - python3-jsonpatch
      - python3-cryptography
    state: present
  become: true
  when: is_control_plane

- name: Ensure python kubernetes
  pip:
    name: kubernetes
    state: present
    extra_args: --user
  when: is_control_plane