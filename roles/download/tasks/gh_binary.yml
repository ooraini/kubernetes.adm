- name: Ensure local user directories
  file:
    path: "{{ _dir }}"
    state: directory
    mode: '0700'
  loop_control:
    loop_var: _dir
  loop:
  - ~/.local/bin
  - ~/.local/share/bash-completion/completions
  - ~/.local/etc/alternatives
  - ~/.local/var/lib/alternatives

- vars:
    github_path: >-
      {{ github_project ~ '/releases/latest/download' if release_version == 'latest'
          else github_project ~ '/releases/download/' ~ release_version }}
    download_url: "{{ github_base_url ~ '/' ~ github_path ~ '/' ~ release_file }}"
  block:
    - assert:
        that: release_version is defined

    - name: Enusre path when download_only
      file:
        path: "{{ download_only_path }}/{{ github_path }}"
        state: directory
      when: download_only and not download_only_flat


    - name: Download {{ release_file }} [{{ release_version }}] from {{ github_project }}
      include_tasks: download_file.yml
      vars:
        download_dest: "{{ download_only_path }}/{{ github_path }}"
        download_unarchive: false
      when: download_only and not download_only_flat

    - name: Download {{ release_file }} [{{ release_version }}] from {{ github_project }}
      include_tasks: download_file.yml
      vars:
        download_dest: "{{ binary_path }}/{{ binary_name }}{{ '@' ~ binary_version if suffix_binary_with_version else '' }}"
      when: not download_only or download_only_flat

- when: completion_command is defined and not download_only
  block:
    - name: Load completion script
      command: "{{ binary_path }}/{{ binary_name }}{{ '@' ~ binary_version if suffix_binary_with_version else '' }} {{ completion_command }}"
      changed_when: false
      register: completion_cmd_out

    - name: Ensure completion script
      copy:
        content: "{{ completion_cmd_out.stdout_lines | join('\n') }}"
        mode: '0644'
        dest: "{{ completion_path }}/{{ binary_name }}{{ '@' ~ binary_version if suffix_binary_with_version else '' }}"

- name: Set update-alternatives
  command: >-
    /usr/sbin/update-alternatives --install {{ binary_path }}/{{ binary_name }} {{ binary_name }} {{ binary_path }}/{{ binary_name }}{{ '@' ~ binary_version }} 50
    --slave {{ completion_path }}/{{ binary_name }} {{ completion_name }} {{ completion_path }}/{{ binary_name }}{{ '@' ~ binary_version }}
    {{ '' if system_wide else '--altdir ~/.local/etc/alternatives --admindir ~/.local/var/lib/alternatives' }}
  vars:
    completion_name: "{{ binary_name }}.{{  ansible_user_shell | basename }}"
  when: update_alternatives and not download_only