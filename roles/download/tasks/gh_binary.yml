- name: Ensure .local/bin directory
  file:
    path: "~/.local/bin"
    state: directory
    mode: '0700'
    recurse: true

- vars:
    github_path: >-
      {{ github_project ~ '/releases/latest/download' if release_version == 'latest'
          else github_project ~ '/releases/download/' ~ release_version ~ '/' }}
    download_url: "{{ github_base_url ~ '/' ~ github_path ~ '/' ~ release_file }}"
  block:
    - assert:
        that: release_version is defined
        
    - name: Enusre path when download_only  
      file: 
        path: "{{ download_only_path }}/{{ github_path }}"
        state: directory
      when: download_only and not download_only_flat
     

    - name: Download {{ release_file }} [{{ release_version }}] from {{ github_project }}
      include_tasks: download_file.yml
      vars:
        download_dest: "{{ download_only_path }}/{{ github_path }}"
        download_unarchive: false
      when: download_only and not download_only_flat


    - name: Download {{ release_file }} [{{ release_version }}] from {{ github_project }}
      include_tasks: download_file.yml
      vars:
        download_dest: "{{ binary_path }}/{{ binary_name }}"
      when: not download_only or download_only_flat

- when: completion_command is defined and not download_only
  block:
    - name: Load completion script
      command: "{{ binary_path }}/{{ binary_name }} {{ completion_command }}"
      changed_when: false
      register: completion_cmd_out

    - name: Ensure completion script in ~/.bash_completion
      blockinfile:
        path: "~/.bash_completion"
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ binary_name }}"
        create: true
        block: "{{ completion_cmd_out.stdout_lines | join('\n') }}"
      when: not system_wide
    
    - name: Ensure completion script in /etc/bash_completion.d/
      copy:
        content: "{{ completion_cmd_out.stdout_lines | join('\n') }}"
        dest: /etc/bash_completion.d/{{ binary_name }}
      when: system_wide