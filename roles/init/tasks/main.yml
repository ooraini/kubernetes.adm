- assert:
    that: ansible_play_hosts | length == 1 and is_control_plane
    fail_msg: init SHOULD run on a single control plane host
    quiet: true

- name: Check if node is initialized
  find:
    use_regex: true
    patterns: '(?!kubeadm\.conf).*$'
    paths:
      - /etc/kubernetes/

  become: true
  register: etc_kubernetes_out

- include_tasks: init.yml
  when: etc_kubernetes_out.matched == 0

- set_fact:
    _username: "{{ ansible_env['SUDO_USER'] | default(ansible_env['USER']) }}"

- name: Get user info
  getent:
    database: passwd
    key: "{{ _username }}"

- vars:
    uid: "{{ ansible_facts.getent_passwd[_username][1] }}"
    gid: "{{ ansible_facts.getent_passwd[_username][2] }}"
    homedir: "{{ ansible_facts.getent_passwd[_username][4] }}"
  block:
  - name: Ensure .kube directory
    file:
      path: "{{ homedir }}/.kube"
      state: directory

  - name: Ensure admin.conf is in the user's home directory
    copy:
      src: /etc/kubernetes/admin.conf
      dest: "{{ homedir }}/.kube/config"
      remote_src: true
      owner: "{{ uid }}"
      group: "{{ gid }}"
      mode: '0600'
    become: true